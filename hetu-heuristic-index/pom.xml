<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>io.hetu.core</groupId>
        <artifactId>presto-root</artifactId>
        <version>1.4.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>hetu-heuristic-index</artifactId>
    <name>hetu-heuristic-index</name>
    <packaging>hetu-plugin</packaging>

    <properties>
        <air.check.skip-jacoco>false</air.check.skip-jacoco>
        <air.main.basedir>${project.parent.basedir}</air.main.basedir>
        <air.check.fail-duplicate-finder>false</air.check.fail-duplicate-finder>
        <org.slf4j.version>1.7.30</org.slf4j.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!--disable resusefork so the same JVM is not shared by testcases.
                    Hindex relies on a static cache in SplitFiltering.java, if multiple
                    testcases spawn multiple testservers via DistributedQueryRunner
                    there will be conflicts because all testservers will use the same
                    cache instance; this is only an issue during unit testing, in production
                    multiple servers do not share JVMs-->
                    <forkCount>2</forkCount>
                    <reuseForks>false</reuseForks>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>io.hetu.core</groupId>
            <artifactId>presto-expressions</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mapdb</groupId>
            <artifactId>mapdb</artifactId>
            <version>3.0.8</version>
        </dependency>
        <dependency>
            <groupId>org.roaringbitmap</groupId>
            <artifactId>RoaringBitmap</artifactId>
            <version>0.9.0</version>
        </dependency>
        <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
        </dependency>
        <dependency>
            <artifactId>commons-compress</artifactId>
            <groupId>org.apache.commons</groupId>
            <version>1.21</version>
        </dependency>
        <dependency>
            <groupId>io.hetu.core</groupId>
            <artifactId>hetu-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.hetu.core</groupId>
            <artifactId>presto-testing-docker</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>log</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>3.5.13</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-core</artifactId>
            <version>2.0.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-testng</artifactId>
            <version>2.0.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-testng-common</artifactId>
            <version>2.0.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <version>2.0.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.objenesis</groupId>
            <artifactId>objenesis</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.26.0-GA</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>slice</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.hetu.core</groupId>
            <artifactId>presto-spi</artifactId>
        </dependency>
        <dependency>
            <groupId>io.hetu.core</groupId>
            <artifactId>hetu-filesystem-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.hetu.core</groupId>
            <artifactId>hetu-metastore</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>it.unimi.dsi</groupId>
            <artifactId>fastutil</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>testing-mysql-server</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.hetu.core</groupId>
            <artifactId>presto-hive-hadoop2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.hetu.core</groupId>
            <artifactId>presto-main</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.hetu.core</groupId>
            <artifactId>presto-tpch</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.hetu.core</groupId>
            <artifactId>presto-tests</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.hetu.core</groupId>
            <artifactId>presto-parser</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.hetu.core</groupId>
            <artifactId>presto-hive</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
